@model EPiServer.Reference.Commerce.Site.Features.Login.ViewModels.RegisterAccountViewModel
@{
    Layout = null;
}

<div class="col-md-6 col-sm-6">
    <h3>@Html.Translate("/Registration/Heading")</h3>

    @if (!ViewData.ModelState.IsValid)
    {
        <div>
            @foreach (var item in ViewData.ModelState.Where(x => x.Key == string.Empty))
            {
                foreach (var error in item.Value.Errors)
                {
                    <p>@error.ErrorMessage</p>
                }
            }
        </div>
    }

    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
    {
        <div class="alert alert-danger"><p>@Model.ErrorMessage</p></div>
    }
    @using (Html.BeginForm("RegisterAccount", "Login", FormMethod.Post, new { @class = "jsRegistration", @role = "form" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(x => x.Address.Name)

        <div class="form-group">
            @Html.LabelFor(x => x.Email)
            @Html.TextBoxFor(x => x.Email, new { @class = "form-control", id = "email-registration" })
            @Html.ValidationMessageFor(x => x.Email)
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.Password)
            @Html.PasswordFor(x => x.Password, new { @class = "form-control", id = "password-registration" })
            @Html.ValidationMessageFor(x => x.Password)
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.Password2)
            @Html.PasswordFor(x => x.Password2, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Password2)
        </div>
        <div class="row">
            <div class="form-group col-md-6">
                @Html.LabelFor(x => x.Address.FirstName)
                @Html.TextBoxFor(x => x.Address.FirstName, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Address.FirstName)
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(x => x.Address.LastName)
                @Html.TextBoxFor(x => x.Address.LastName, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Address.LastName)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.Address.Line1)
            @Html.TextBoxFor(x => x.Address.Line1, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Address.Line1)
        </div>
        <div class="row">
            <div class="form-group col-md-4">
                @Html.LabelFor(x => x.Address.PostalCode)
                @Html.TextBoxFor(x => x.Address.PostalCode, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Address.PostalCode)
            </div>
            <div class="form-group col-md-8">
                @Html.LabelFor(x => x.Address.City)
                @Html.TextBoxFor(x => x.Address.City, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Address.City)
            </div>
        </div>
        @Html.EditorFor(model => model.Address.CountryRegion, Model.Address.CountryRegion)

        <div class="form-group">
            @Html.LabelFor(x => x.Address.CountryCode)
            @Html.DropDownListFor(x => x.Address.CountryCode, new SelectList(Model.Address.CountryOptions, "Code", "Name", Model.Address.CountryCode), new { @class = "form-control jsChangeCountry" })
            @Html.ValidationMessageFor(x => x.Address.CountryCode)
            @Html.Hidden("address-htmlfieldprefix", "Address")
        </div>
        
        @Html.PropertyFor(model => model.CurrentPage.MainArea)
        
        <div class="checkbox">
            <label>
                @Html.CheckBoxFor(x => x.AcceptMarketingEmail, new { @type = "checkbox" }) @Html.Translate("/Registration/Form/Label/AcceptMarketingEmail")
            </label>
        </div>
        <button type="submit" class="btn btn-primary btn--blue">@Html.Translate("/Registration/Form/Label/Submit")</button>
    }
</div>