@model EPiServer.Reference.Commerce.Site.Features.Shared.Models.IProductModel

@{

    if (Model == null)
    {
        return;
    }

    bool hasDiscount = Model.IsAvailable && Model.DiscountedPrice.GetValueOrDefault().Amount < Model.PlacedPrice.Amount;
    string productLevelClass = hasDiscount ? "product has-discount" : "product";
    bool renderWishListButtons = Model.IsAvailable ? User.Identity.IsAuthenticated && ViewBag.IsWishList != null && ViewBag.IsWishList == true : false;
}

<div class="@productLevelClass">
    <a href="@Model.Url" class="link--black">
        <div class="view-details"></div>
        <img src="@Model.ImageUrl" alt="@Model.Code" class="img-responsive">

        <h3 class="product-title">@Model.DisplayName</h3>

        <div>
            <span class="product-brand">@Html.PropertyFor(x => x.Brand)</span>
            @if (Model.IsAvailable)
            {
                if (Model.DiscountedPrice.HasValue && Model.DiscountedPrice.Value.Amount > 0)
                {
                    if (hasDiscount)
                    {
                        <h4 class="product-price">@Helpers.RenderMoney(Model.PlacedPrice)</h4>
                        <h4 class="product-price product-price--discount">@Helpers.RenderMoney(Model.DiscountedPrice.GetValueOrDefault())</h4>
                    }
                    else
                    {
                        <h4 class="product-price">@Helpers.RenderMoney(Model.DiscountedPrice.GetValueOrDefault())</h4>
                    }
                }
            }
            else
            {
                <h4 class="product-price">@Html.Translate("/Product/NotAvailable")</h4>
            }
        </div>
    </a>

    @if (renderWishListButtons && !(bool)ViewData["IsReadOnly"])
    {
        <div class="action-buttons wishlist-actions">
            @using (@Html.BeginForm("AddToCart", "Cart", FormMethod.Post, new { @class = "form-inline", data_container = "MiniCart" }))
            {
                @Html.Hidden("code", Model.Code)
                <button type="submit" role="button" class="btn btn-primary jsAddToCart"><span class="glyphicon glyphicon-shopping-cart"></span> @Html.Translate("/Product/Button/AddToCart")</button>
            }
            @using (@Html.BeginForm("ChangeCartItem", "WishList", FormMethod.Post, new { @class = "form-inline", data_container = "WishListMiniCart" }))
            {
                @Html.Hidden("code", Model.Code)
                @Html.Hidden("quantity", 0, new { @class = "jsChangeCartItem" })
                @Html.Hidden("displayName", Model.DisplayName)
                <button role="button" class="btn btn-gray-lighter jsRemoveCartItem"><i class="glyphicon glyphicon-remove"></i></button>
            }
        </div>
    }
</div>

<div class="quick-view-btn-container">
    <button type="button" data-toggle="modal" data-target="#ModalDialog" data-url="@Model.Url" class="btn btn-block btn-sm quickview-button">@Html.Translate("/Product/Quickview")</button>
</div>