@model EPiServer.Reference.Commerce.Site.Features.AddressBook.ViewModels.AddressViewModel

<div class="col-xs-12 col-md-9 jsAddressBook">
    @using (Html.BeginForm("Save", "AddressBook", FormMethod.Post))
            {
        <h2>
            @if (!string.IsNullOrEmpty(Model.Address.AddressId))
            {
                @Html.Translate("/AddressBook/Edit/Header")
            }
            else
            {
                @Html.Translate("/AddressBook/AddNew/Header")
            }
        </h2>

        if (!String.IsNullOrEmpty(Model.Address.ErrorMessage))
        {
            <div class="alert alert-danger">@Model.Address.ErrorMessage</div>
        }

        <div class="form-group">
            @Html.LabelFor(x => x.Address.Name)
            @Html.TextBoxFor(x => x.Address.Name, new { @class = "form-control", autofocus = "autofocus" })
            @Html.ValidationMessageFor(x => x.Address.Name)
        </div>
                <div class="row">
                    <div class="form-group col-md-6">
                        @Html.LabelFor(x => x.Address.FirstName)
                        @Html.TextBoxFor(x => x.Address.FirstName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Address.FirstName)
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(x => x.Address.LastName)
                        @Html.TextBoxFor(x => x.Address.LastName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Address.LastName)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.Address.Line1)
                    @Html.TextBoxFor(x => x.Address.Line1, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Address.Line1)
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.Address.Line2)
                    @Html.TextBoxFor(x => x.Address.Line2, new { @class = "form-control" })
                </div>
                <div class="row">

                    <div class="form-group col-md-4">
                        @Html.LabelFor(x => x.Address.PostalCode)
                        @Html.TextBoxFor(x => x.Address.PostalCode, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Address.PostalCode)
                    </div>
                    <div class="form-group  col-md-8">
                        @Html.LabelFor(x => x.Address.City)
                        @Html.TextBoxFor(x => x.Address.City, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Address.City)
                    </div>
                </div>
                { @Html.EditorFor(x=>x.Address.CountryRegion, Model.Address.CountryRegion); }
                <div class="form-group">
                    @Html.LabelFor(x => x.Address.CountryCode)
                    @Html.DropDownListFor(x => x.Address.CountryCode, new SelectList(Model.Address.CountryOptions, "Code", "Name", Model.Address.CountryCode), new { @class = "form-control jsChangeCountry" })
                    @Html.ValidationMessageFor(x => x.Address.CountryCode)
                    @Html.Hidden("address-htmlfieldprefix", "Address.CountryRegion")
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.Address.DaytimePhoneNumber)
                    @Html.TextBoxFor(x => x.Address.DaytimePhoneNumber, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Address.DaytimePhoneNumber)
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.Address.Email)
                    @Html.TextBoxFor(x => x.Address.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Address.Email)
                </div>
                <div class="checkbox">
                    <label>
                        @Html.CheckBoxFor(x => x.Address.ShippingDefault) @Html.DisplayNameFor(x => x.Address.ShippingDefault)
                    </label>
                </div>
                <div class="checkbox">
                    <label>
                        @Html.CheckBoxFor(x => x.Address.BillingDefault) @Html.DisplayNameFor(x => x.Address.BillingDefault)
                    </label>
                </div>
                @Html.HiddenFor(x => x.Address.AddressId)

        if (!(bool)ViewData["IsReadOnly"])
        {
            <button type="submit" class="btn btn-primary btn--blue">@Html.Translate("/AddressBook/Form/Label/Submit")</button>
        }

        if (!string.IsNullOrEmpty(Model.Address.AddressId))
        {
            @Html.ActionLink(Html.Translate("/AddressBook/Form/Label/Cancel"), "Index", "AddressBook", new { }, new { @class = "btn btn-default" })
        }
        <hr />
    }
</div>
