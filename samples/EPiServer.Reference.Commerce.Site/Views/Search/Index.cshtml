@using Newtonsoft.Json
@model EPiServer.Reference.Commerce.Site.Features.Search.ViewModels.SearchViewModel<EPiServer.Reference.Commerce.Site.Features.Search.Pages.SearchPage>
@{
    if (Request.IsAjaxRequest())
    {
        Layout = null;
    }
}

<div class="row category-page">
    @if (Model.HasError)
    {
        <div class="col-md-12 text-danger">@Model.ErrorMessage</div>
    }
    else
    {
        @Html.Partial("_Facet", Model.FilterOption)
        using (Html.BeginForm("Index", "Search", FormMethod.Get, new { @class = "jsSearchForm" }))
        {
            <div class="col-md-9">
                @Html.Partial("_ProductList", Model.ProductViewModels)
            </div>
            <input class="jsSearchPage" id="FilterOption_Page" name="FilterOption.Page" type="hidden" value="@(Model.FilterOption.Page + 1)" />
        }
    }
</div>

@if (Functions.ShouldRenderTrackingSection())
{
    @section Tracking{
        <script>
                $(document).ready(function () {
                    var term = '@Model.FilterOption.Q';
                    var productCodes = @Html.Raw(JsonConvert.SerializeObject(Model.ProductViewModels.Select(x => x.Code)));
                    var totalResultCount = @Html.Raw(Model.TotalResultCount);
                    var searchResultTrackingData = TrackingDataFactory.createSearchResultTrackingData(term, productCodes, totalResultCount);

                    searchResultTrackingData["customAttributes"] = { 'marketId': Market.getSelectedMarketId() };

                    epiRecommendations.track(searchResultTrackingData, null, Recommendations.render, { sectionMappings: [{ area: "searchWidget", selector: ".recommendations-bottom" }] });
                });
        </script>
    }
}