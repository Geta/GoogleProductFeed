<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Search_By_User_Name" xml:space="preserve">
    <value>Search By User Name</value>
  </data>
  <data name="Additional_Filters" xml:space="preserve">
    <value>Additional Filters</value>
  </data>
  <data name="Filter_By_Organization_s" xml:space="preserve">
    <value>Filter By Organization(s)</value>
  </data>
  <data name="Search_By_Address" xml:space="preserve">
    <value>Search By Address</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Customer_Group" xml:space="preserve">
    <value>Customer Group</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Created" xml:space="preserve">
    <value>Created</value>
  </data>
  <data name="Approved" xml:space="preserve">
    <value>Approved</value>
  </data>
  <data name="Locked_Out" xml:space="preserve">
    <value>Locked Out</value>
  </data>
  <data name="Last_Activity" xml:space="preserve">
    <value>Last Activity</value>
  </data>
  <data name="Account_Id" xml:space="preserve">
    <value>Account Id</value>
  </data>
  <data name="Last_Modified" xml:space="preserve">
    <value>Last Modified</value>
  </data>
  <data name="Role_Name" xml:space="preserve">
    <value>Role Name</value>
  </data>
  <data name="ID" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="Friendly_Name" xml:space="preserve">
    <value>Friendly Name</value>
  </data>
  <data name="Path" xml:space="preserve">
    <value>Path</value>
  </data>
  <data name="File_Name" xml:space="preserve">
    <value>File Name</value>
  </data>
  <data name="Size" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="Last_Updated" xml:space="preserve">
    <value>Last Updated</value>
  </data>
  <data name="Overview" xml:space="preserve">
    <value>Overview</value>
  </data>
  <data name="Import" xml:space="preserve">
    <value>Import</value>
  </data>
  <data name="HelpPrefix" xml:space="preserve">
    <value>HelpPrefix</value>
  </data>
  <data name="Account_Search_List" xml:space="preserve">
    <value>Account Search List</value>
  </data>
  <data name="Account_List" xml:space="preserve">
    <value>Account List</value>
  </data>
  <data name="Organization_List" xml:space="preserve">
    <value>Organization List</value>
  </data>
  <data name="Account_View" xml:space="preserve">
    <value>Account View</value>
  </data>
  <data name="Organization_View" xml:space="preserve">
    <value>Organization View</value>
  </data>
  <data name="Roles_List" xml:space="preserve">
    <value>Roles List</value>
  </data>
  <data name="Role_Edit" xml:space="preserve">
    <value>Role Edit</value>
  </data>
  <data name="List" xml:space="preserve">
    <value>List</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="User_Name" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Customer_Info_Section" xml:space="preserve">
    <value>Customer Info Section</value>
  </data>
  <data name="Please_Select_Status" xml:space="preserve">
    <value>Please select status.</value>
  </data>
  <data name="Status_Description" xml:space="preserve">
    <value>use this status to control which account can access the front end</value>
  </data>
  <data name="Group_Description" xml:space="preserve">
    <value>specify the group a customer belongs to, can be used for pricing</value>
  </data>
  <data name="Security_Account_Section" xml:space="preserve">
    <value>Security Account Section</value>
  </data>
  <data name="Perform_Account_Actions" xml:space="preserve">
    <value>Perform Account Actions</value>
  </data>
  <data name="Recover_Password" xml:space="preserve">
    <value>Recover Password</value>
  </data>
  <data name="Customer_Management" xml:space="preserve">
    <value>Customer Management</value>
  </data>
  <data name="Account_Search" xml:space="preserve">
    <value>Account Search</value>
  </data>
  <data name="Accounts" xml:space="preserve">
    <value>Accounts</value>
  </data>
  <data name="Organizations" xml:space="preserve">
    <value>Organizations</value>
  </data>
  <data name="Roles" xml:space="preserve">
    <value>Roles</value>
  </data>
  <data name="Profile_System" xml:space="preserve">
    <value>Profile System</value>
  </data>
  <data name="User_Name_Colon" xml:space="preserve">
    <value>User Name:</value>
  </data>
  <data name="Client_List" xml:space="preserve">
    <value />
  </data>
  <data name="Password_Change_Description" xml:space="preserve">
    <value>Password length should be at least {0} characters. Leading and trailing spaces will be removed.</value>
  </data>
  <data name="LoginAsUser" xml:space="preserve">
    <value>Login as User</value>
  </data>
</root>