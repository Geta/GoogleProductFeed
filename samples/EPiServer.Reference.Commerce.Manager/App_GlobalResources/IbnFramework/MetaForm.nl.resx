<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CommonTasks" xml:space="preserve">
    <value>Gemeenschappelijke taken</value>
  </data>
  <data name="MetaClass" xml:space="preserve">
    <value>Klasse</value>
  </data>
  <data name="FormName" xml:space="preserve">
    <value>Formulier</value>
  </data>
  <data name="SelectedElements" xml:space="preserve">
    <value>Geselecteerde elementen</value>
  </data>
  <data name="WarningSection" xml:space="preserve">
    <value>Wilt u de geselecteerde sectie echt verwijderen?</value>
  </data>
  <data name="WarningField" xml:space="preserve">
    <value>Wilt u het geselecteerde veld echt verwijderen?</value>
  </data>
  <data name="AddForm" xml:space="preserve">
    <value>Formulier toevoegen</value>
  </data>
  <data name="EditForm" xml:space="preserve">
    <value>Formulier bewerken</value>
  </data>
  <data name="AddSection" xml:space="preserve">
    <value>Sectie toevoegen</value>
  </data>
  <data name="EditSection" xml:space="preserve">
    <value>Sectie bewerken</value>
  </data>
  <data name="AddField" xml:space="preserve">
    <value>Veld toevoegen</value>
  </data>
  <data name="EditField" xml:space="preserve">
    <value>Veld bewerken</value>
  </data>
  <data name="RemoveSection" xml:space="preserve">
    <value>Sectie verwijderen</value>
  </data>
  <data name="RemoveField" xml:space="preserve">
    <value>Veld verwijderen</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Opslaan</value>
  </data>
  <data name="FormType" xml:space="preserve">
    <value>Formuliertype</value>
  </data>
  <data name="DuplicateTitleException" xml:space="preserve">
    <value>Deze titel is al gebruikt!</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Titel</value>
  </data>
  <data name="ViewType" xml:space="preserve">
    <value>Weergavetype</value>
  </data>
  <data name="OneCol" xml:space="preserve">
    <value>Een kolom</value>
  </data>
  <data name="TwoCols11" xml:space="preserve">
    <value>Twee kolommen (1:1)</value>
  </data>
  <data name="TwoCols12" xml:space="preserve">
    <value>Twee kolommen (1:2)</value>
  </data>
  <data name="TwoCols21" xml:space="preserve">
    <value>Twee kolommen (2:1)</value>
  </data>
  <data name="ThreeCols" xml:space="preserve">
    <value>Drie kolommen (1:1:1)</value>
  </data>
  <data name="CellPadding" xml:space="preserve">
    <value>Celopvulling</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Annuleren</value>
  </data>
  <data name="AddFormComment" xml:space="preserve">
    <value>Een nieuw formulier toevoegen aan het systeem.</value>
  </data>
  <data name="EditFormComment" xml:space="preserve">
    <value>U kunt het formulier bewerken.</value>
  </data>
  <data name="CustomForm" xml:space="preserve">
    <value>Aangepast formulier</value>
  </data>
  <data name="LabelWidth" xml:space="preserve">
    <value>Labelbreedte</value>
  </data>
  <data name="ColSpan1" xml:space="preserve">
    <value>Een kolom</value>
  </data>
  <data name="ColSpan2" xml:space="preserve">
    <value>Twee kolommen</value>
  </data>
  <data name="Rows" xml:space="preserve">
    <value>Rijen</value>
  </data>
  <data name="Control" xml:space="preserve">
    <value>Instellen</value>
  </data>
  <data name="AddFieldComment" xml:space="preserve">
    <value>Een nieuw formulieritem toevoegen aan het formulier.</value>
  </data>
  <data name="EditFieldComment" xml:space="preserve">
    <value>U kunt het formulieritem bewerken.</value>
  </data>
  <data name="ShowName" xml:space="preserve">
    <value>Itemlabel op het formulier weergeven</value>
  </data>
  <data name="NoControl" xml:space="preserve">
    <value>Geen instelling</value>
  </data>
  <data name="EditSectionComment" xml:space="preserve">
    <value>U kunt de sectie bewerken.</value>
  </data>
  <data name="AddSectionComment" xml:space="preserve">
    <value>Een nieuwe sectie toevoegen aan het formulier.</value>
  </data>
  <data name="Section1" xml:space="preserve">
    <value>Sectie1</value>
  </data>
  <data name="ShowBorderSection" xml:space="preserve">
    <value>Kantlijn tonen voor deze sectie.</value>
  </data>
  <data name="ShowNameSection" xml:space="preserve">
    <value>De naam van deze sectie tonen op het formulier.</value>
  </data>
  <data name="Field" xml:space="preserve">
    <value>Veld</value>
  </data>
  <data name="FieldIsReadOnly" xml:space="preserve">
    <value>Veld is alleen-lezen</value>
  </data>
  <data name="Table" xml:space="preserve">
    <value>Tabel:</value>
  </data>
  <data name="RemoveElement" xml:space="preserve">
    <value>Verwijderen</value>
  </data>
  <data name="WarningElement" xml:space="preserve">
    <value>Wilt u het geselecteerde element echt verwijderen?</value>
  </data>
  <data name="EditElement" xml:space="preserve">
    <value>Bewerken</value>
  </data>
  <data name="AddElement" xml:space="preserve">
    <value>Toevoegen</value>
  </data>
  <data name="MoveElement" xml:space="preserve">
    <value>Verplaatsen</value>
  </data>
  <data name="Form_Create" xml:space="preserve">
    <value>Formulier maken</value>
  </data>
  <data name="Form_Edit" xml:space="preserve">
    <value>Formulier bewerken</value>
  </data>
  <data name="Form_ShortInfo" xml:space="preserve">
    <value>Kort infoformulier</value>
  </data>
  <data name="Form_PublicInfo" xml:space="preserve">
    <value>Publiek Formulier bewerken</value>
  </data>
  <data name="Form_View" xml:space="preserve">
    <value>Formulier bekijken</value>
  </data>
  <data name="SaveClose" xml:space="preserve">
    <value>Opslaan en sluiten</value>
  </data>
  <data name="RecreateForm" xml:space="preserve">
    <value>Formulier opnieuw maken</value>
  </data>
  <data name="RecreateFormWarning" xml:space="preserve">
    <value>Wilt u dit formulier echt opnieuw maken?</value>
  </data>
  <data name="SmartTableLayout" xml:space="preserve">
    <value>Veldentabel</value>
  </data>
  <data name="MetaPrimitive" xml:space="preserve">
    <value>Primitief veld</value>
  </data>
  <data name="HideLabel" xml:space="preserve">
    <value>Label verbergen</value>
  </data>
  <data name="SystemLabel" xml:space="preserve">
    <value>Systeemlabel</value>
  </data>
  <data name="CustomLabel" xml:space="preserve">
    <value>Aangepast label</value>
  </data>
  <data name="TabIndex" xml:space="preserve">
    <value>Tabbladindex</value>
  </data>
</root>
