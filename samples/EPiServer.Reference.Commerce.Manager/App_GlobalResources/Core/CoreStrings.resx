<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Progress_Indicator" xml:space="preserve">
    <value>Progress Indicator</value>
  </data>
  <data name="LogExport_All_Logs_Export" xml:space="preserve">
    <value>All Logs Export</value>
  </data>
  <data name="LogExport_View_Logs_Export" xml:space="preserve">
    <value>View Logs Export</value>
  </data>
  <data name="LogExport_Current_Page_Logs_Export" xml:space="preserve">
    <value>Current Page Logs Export</value>
  </data>
  <data name="Search_Rebuild_Index" xml:space="preserve">
    <value>Rebuild Index</value>
  </data>
  <data name="Search_Build_Index" xml:space="preserve">
    <value>Build Index</value>
  </data>
  <data name="CommonSettings_Language_Description" xml:space="preserve">
    <value>Language that will be selected by default in drowdowns, etc.</value>
  </data>
  <data name="CommonSettings_Currency_Description" xml:space="preserve">
    <value>Currency that will be used is cases where currency is needed but not specified</value>
  </data>
  <data name="CommonSettings_Length_Unit_Description" xml:space="preserve">
    <value>Default unit of length</value>
  </data>
  <data name="CommonSettings_Weight_Unit_Description" xml:space="preserve">
    <value>Default unit of weight</value>
  </data>
  <data name="License_Activated" xml:space="preserve">
    <value>Activated</value>
  </data>
  <data name="License_Expires" xml:space="preserve">
    <value>Expires</value>
  </data>
  <data name="License_Installation" xml:space="preserve">
    <value>License Installation</value>
  </data>
  <data name="License_Install_By_Key" xml:space="preserve">
    <value>Install by License Key</value>
  </data>
  <data name="License_Install_File" xml:space="preserve">
    <value>Install License File (*.lic)</value>
  </data>
  <data name="License_Licensed_To" xml:space="preserve">
    <value>Licensed to</value>
  </data>
  <data name="Search_Build_Instructions" xml:space="preserve">
    <value>Build the Search Index. This operation will build the index for items updated since last build.</value>
  </data>
  <data name="Search_Rebuild_Instructions" xml:space="preserve">
    <value>Rebuild the Search Index. This operation will cause complete index rebuild.</value>
  </data>
  <data name="License_Edition" xml:space="preserve">
    <value>Edition</value>
  </data>
  <data name="License_Component" xml:space="preserve">
    <value>Component</value>
  </data>
  <data name="Config_Replication_Controls" xml:space="preserve">
    <value>Replication Controls</value>
  </data>
  <data name="Uploader_File_Uploading_Progress" xml:space="preserve">
    <value>File Uploading Progress</value>
  </data>
  <data name="Uploader_Browse_Instructions" xml:space="preserve">
    <value>Click &lt;b&gt;Browse&lt;/b&gt; and select file, or type file path</value>
  </data>
  <data name="MetaData_Save_The_File" xml:space="preserve">
    <value>Save the file</value>
  </data>
  <data name="MetaData_Start_Import" xml:space="preserve">
    <value>Start Import</value>
  </data>
  <data name="MetaData_Db_Backup_Recommendation" xml:space="preserve">
    <value>It is strongly recommended that you back up your ECF database before performing import.</value>
  </data>
  <data name="MetaData_Import_Instructions" xml:space="preserve">
    <value>To import meta data, please pick an existing file from the grid below or upload a new one. Then click the button 'Start Import' to start importing.</value>
  </data>
  <data name="MetaData_Files_Available_For_Import" xml:space="preserve">
    <value>Files available for import</value>
  </data>
  <data name="MetaData_Catalog_Meta_Classes" xml:space="preserve">
    <value>Catalog Meta classes</value>
  </data>
  <data name="MetaData_Order_Meta_Classes" xml:space="preserve">
    <value>Order Meta classes</value>
  </data>
  <data name="MetaData_Baf_Meta_Classes" xml:space="preserve">
    <value>Business Foundation Meta Classes</value>
  </data>
  <data name="MetaData_Store_The_Value" xml:space="preserve">
    <value>Store the value</value>
  </data>
  <data name="MetaData_Auto_Resize_Image" xml:space="preserve">
    <value>Auto Resize Image</value>
  </data>
  <data name="MetaData_Stretch_Image" xml:space="preserve">
    <value>Stretch Image</value>
  </data>
  <data name="MetaData_Auto_Create_Thumbnail_Image" xml:space="preserve">
    <value>Auto Create Thumbnail Image</value>
  </data>
  <data name="MetaData_Stretch_Thumbnail_Image" xml:space="preserve">
    <value>Stretch Thumbnail Image</value>
  </data>
  <data name="MetaData_Add_Value" xml:space="preserve">
    <value>Add Value</value>
  </data>
  <data name="MetaData_Precision_LessThanOrEqual_38" xml:space="preserve">
    <value>Precision+Scale must be &amp;lt;= 38</value>
  </data>
  <data name="MetaData_Search_Properties" xml:space="preserve">
    <value>Search Properties</value>
  </data>
  <data name="MetaData_Indexing_Option" xml:space="preserve">
    <value>Indexing Option</value>
  </data>
  <data name="MetaData_Tokenized" xml:space="preserve">
    <value>Tokenized</value>
  </data>
  <data name="MetaData_Not_Tokenized" xml:space="preserve">
    <value>Not Tokenized</value>
  </data>
  <data name="Cycle_No" xml:space="preserve">
    <value>No cycle</value>
  </data>
  <data name="Cycle_Daily" xml:space="preserve">
    <value>Daily Cycle</value>
  </data>
  <data name="Cycle_Weekly" xml:space="preserve">
    <value>Weekly Cycle</value>
  </data>
  <data name="Cycle_Monthly" xml:space="preserve">
    <value>Monthly Cycle</value>
  </data>
  <data name="Cycle_Yearly" xml:space="preserve">
    <value>Yearly Cycle</value>
  </data>
  <data name="Cycle_Custom1" xml:space="preserve">
    <value>Custom1 Cycle</value>
  </data>
  <data name="Cycle_Custom2" xml:space="preserve">
    <value>Custom2 Cycle</value>
  </data>
  <data name="MetaData_Error_CreateMetaClass_AlreadyExists" xml:space="preserve">
    <value>The Meta Class with such name already exists. Try to use another name.</value>
  </data>
  <data name="Template_Image" xml:space="preserve">
    <value>Template Image</value>
  </data>
  <data name="DialogControl_Select_Line_Items" xml:space="preserve">
    <value>Select Line Items</value>
  </data>
  <data name="Progress_Operation_Log" xml:space="preserve">
    <value>Operation Log</value>
  </data>
  <data name="Spell_Check" xml:space="preserve">
    <value>Spell Check</value>
  </data>
  <data name="Spell_Word_Not_In_Dictionary" xml:space="preserve">
    <value>Word Not in Dictionary</value>
  </data>
  <data name="Spell_Change_To" xml:space="preserve">
    <value>Change To</value>
  </data>
  <data name="MetaData_Import_Title" xml:space="preserve">
    <value>Meta Data Import</value>
  </data>
  <data name="MetaData_Error_CreateMetaClass_FriendlyName_AlreadyExists" xml:space="preserve">
    <value>The Meta Class with such friendly name already exists. Try to use another friendly name.</value>
  </data>
  <data name="MetaData_Baf_Enums" xml:space="preserve">
    <value>Business Foundation Enums</value>
  </data>
  <data name="MetaDataView_BinaryValue" xml:space="preserve">
    <value>[Binary Value]</value>
  </data>
  <data name="MetaDataView_Value_Not_Set" xml:space="preserve">
    <value>&lt;not set&gt;</value>
  </data>
  <data name="Search_Default_Provider" xml:space="preserve">
    <value>Default Search Provider:</value>
  </data>
  <data name="Search_Indexers" xml:space="preserve">
    <value>Indexers:</value>
  </data>
  <data name="Search_Installed_Providers" xml:space="preserve">
    <value>Installed Search Providers:</value>
  </data>
  <data name="Search_Operations" xml:space="preserve">
    <value>Index Operations</value>
  </data>
  <data name="Search_Settings" xml:space="preserve">
    <value>Search Configuration</value>
  </data>
  <data name="RecentReferenceMetaClassFriendlyName" xml:space="preserve">
    <value>User Recent Reference</value>
  </data>
  <data name="RecentReferenceMetaClassName" xml:space="preserve">
    <value>RecentReferenceHistory</value>
  </data>
  <data name="RecentReferenceMetaClassPluralName" xml:space="preserve">
    <value>User Recent References</value>
  </data>
  <data name="Search_Generated_Configuration" xml:space="preserve">
    <value>Generated Configuration Text:</value>
  </data>
</root>